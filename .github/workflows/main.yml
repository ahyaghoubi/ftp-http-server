name: Build and Release

on:
  push:
    tags:
      - "v*"  # Trigger on tags like v1.0.0, v2.0.1, etc.

jobs:
  build_release:
    name: Build executables for multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: "server_setup_linux"
          - os: windows-latest
            artifact_name: "server_setup_windows"
          - os: macos-latest
            artifact_name: "server_setup_macos"

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller
          # If you have other requirements, install them here
          # pip install -r requirements.txt

      - name: Build executable
        run: |
          pyinstaller main.py --onefile --name ${{ matrix.artifact_name }}

      - name: Rename artifact
        run: |
          # Rename the built file to include the version from the tag (e.g., v1.1.0).
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist\\${{ matrix.artifact_name }}.exe dist\\${{ matrix.artifact_name }}_${{ github.ref_name }}.exe
          else
            mv dist/${{ matrix.artifact_name }} dist/${{ matrix.artifact_name }}_${{ github.ref_name }}
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}_${{ github.ref_name }}
          path: |
            dist/${{ matrix.artifact_name }}_${{ github.ref_name }}*

  create_release:
    name: Create Release
    needs: [build_release]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}  # The tag that triggered the workflow (e.g. v1.1.0)
          name: Release ${{ github.ref_name }}
          body: "Automated build for ${{ github.ref_name }}"
          artifacts: |
            server_setup_linux_${{ github.ref_name }}
            server_setup_windows_${{ github.ref_name }}
            server_setup_macos_${{ github.ref_name }}
          draft: false
          prerelease: false
